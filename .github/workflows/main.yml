name: Main

on:
  pull_request:
    branches:
      - main
  push:
    branches:
      - main

jobs:
  dogfood:
    runs-on: ubuntu-latest
    if: contains(github.event_name, 'pull_request')
    strategy:
      matrix:
        node-version: [12.x, 14.x, 15.x, 16.x]
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Set Node.js version
        uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node-version }}

      - name: Cache Node Modules
        uses: actions/cache@v2
        with:
          path: node_modules
          key: ${{ runner.OS }}-${{ matrix.node-version }}-build-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.OS }}-${{ matrix.node-version }}-build-${{ env.cache-name }}-
            ${{ runner.OS }}-${{ matrix.node-version }}-build-
            ${{ runner.OS }}-${{ matrix.node-version }}-
            ${{ runner.OS }}-

      - name: dogfood scan-env to check on scan-env itself
        run: |
          npm i
          npm link
          scan-env --strict

  lint:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [12.x, 14.x, 15.x, 16.x]
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Set Node.js version
        uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node-version }}

      - name: Cache Node Modules
        uses: actions/cache@v2
        with:
          path: node_modules
          key: ${{ runner.OS }}-${{ matrix.node-version }}-build-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.OS }}-${{ matrix.node-version }}-build-${{ env.cache-name }}-
            ${{ runner.OS }}-${{ matrix.node-version }}-build-
            ${{ runner.OS }}-${{ matrix.node-version }}-
            ${{ runner.OS }}-

      - name: lint
        run: |
          npm i
          npm run lint

  depcheck:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [12.x, 14.x, 15.x, 16.x]
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Set Node.js version
        uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node-version }}

      - name: Cache Node Modules
        uses: actions/cache@v2
        with:
          path: node_modules
          key: ${{ runner.OS }}-${{ matrix.node-version }}-build-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.OS }}-${{ matrix.node-version }}-build-${{ env.cache-name }}-
            ${{ runner.OS }}-${{ matrix.node-version }}-build-
            ${{ runner.OS }}-${{ matrix.node-version }}-
            ${{ runner.OS }}-

      - run: npx depcheck

  release:
    name: Trigger a release
    runs-on: ubuntu-latest
    needs: [lint, depcheck]
    if: contains(github.event_name, 'push')
    steps:
      - name: checkout
        uses: actions/checkout@v2
        with:
          ref: main
          fetch-depth: 0
      - uses: actions/setup-node@v1
        with:
          node-version: 14.x
      - run: npm i
      - name: Create tag
        if: ${{ success() }}
        run: npx @eqworks/release tag --github -v
        env:
          GITHUB_OWNER: EQWorks
          GITHUB_TOKEN: ${{ secrets.CD_GITHUB_TOKEN }}
